<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	 http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd ">

	<!-- 
		spring mvc관련 어노테이션을 분석하고, 적절한 처리를 담당하는 클래스들을 스프링 컨테이너의 빈으로 등록시킨다.
	 -->
	<mvc:annotation-driven />
	
	<!-- 
		정적자원 매핑(이미지, CSS, javascript 소스 등)
	 -->
	<mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>
	
	<!-- 
		com.cinemabox.web.controller 패키지의 클래스들을 자동으로 스프링 컨테이너의 빈으로 등록시킨다.
	 -->
	<context:component-scan base-package="com.cinemabox.web.controller" />
	
	<!-- 
		첨부파일 업로드 요청(멀티파트 요청)을 처리하는 MultipartResolver 빈을 스프링 컨테이너에 등록
		CommonsMultipartResolver는 Apache commons-fileupload, commons-io 라이브러리를 이용해서 멀티파트 요청 처리를 지원하는 클래스다.
	 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

	<!-- 
		JSP 기반의 웹 애플리케이션인 경우 ViewResolver 설정하기						
	 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>







